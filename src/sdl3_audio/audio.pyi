def _init_library(lib_path:str)->None:...

def dB(db:float)->float:...

def list_audio_drivers()->list[str]:...
def get_current_audio_driver()->str:...

class AudioSpec:
    @property
    def format(self)->str:...
    @property
    def n_channels(self)->int:...
    @property
    def sample_rate(self)->int:...
    @property
    def frame_size(self)->int:...
    def __init__(self, format:str, n_channels:int=2, sample_rate:int=48000)->None:...

def list_playback_devices() -> list["PhysicalAudioDevice"]:...
def list_recording_devices() -> list["PhysicalAudioDevice"]:...
def open_default_playback_device(spec_hint:AudioSpec|None=None) -> "LogicalAudioDevice":...
def open_default_recording_device(spec_hint:AudioSpec|None=None) -> "LogicalAudioDevice":...

class _AudioDevice:
    @property
    def name(self) -> str:...
    @property
    def playback(self) -> bool:...
    @property
    def recording(self) -> bool:...
    @property
    def id(self) -> int:...


class PhysicalAudioDevice(_AudioDevice):
    @property
    def preferred_spec(self) -> AudioSpec:...
    def open(self, spec_hint:AudioSpec|None=None) -> "LogicalAudioDevice":...

class LogicalAudioDevice(_AudioDevice):
    paused: bool
    gain: float
    @property
    def default(self) -> bool:...
    @property
    def spec(self) -> AudioSpec:...
    def duplicate(self, spec_hint=None) -> "LogicalAudioDevice":...

class Audio:
    @property
    def spec(self) -> AudioSpec:...
    @property
    def duration(self) -> float:...
    @classmethod
    def from_buffer(cls, buffer:bytearray|bytes, spec:AudioSpec)->Audio:...
    @classmethod
    def from_wav_file(cls, filename:str)->Audio:...
    @classmethod
    def join(cls, lst:list["Audio"])->Audio:...
    def convert(self,spec:AudioSpec)->Audio:...

class AudioStream:
    src_spec: AudioSpec
    dst_spec: AudioSpec
    gain: float
    frequency_ratio: float
    def __init__(self,
        bound_device: LogicalAudioDevice|None,
        src_spec: AudioSpec|None=None,
        dst_spec: AudioSpec|None=None
    ):...
    def bind(self, device:LogicalAudioDevice)->None:...
    def unbind(self)->None:...
    def queued_data_length(self)->int:...
    def available_data_length(self)->int:...
    def put_audio(self, audio:Audio)->None:...
    def get_audio(self) -> Audio:...
    def get_audio_nowait(self, length:int|None = None) -> Audio:...
    def flush(self)->None:...
    def clear(self)->None:...
    
